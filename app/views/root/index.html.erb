<div class="container">
  <section class="muse-section">
    <div class="row align-items-center">
      <div class="col-lg-10 m-auto text-center">
        <div class="my-3">
          <h1 class="display-2">Email sequences <br>for your Rails app.</h1>
          <h2 class="mb-0 pb-md-3 mt-2">
            Create, manage, and send timed email sequences in just a few lines of code.</h2>
          <a href="https://github.com/joshmn/caffeinate" class="btn btn-xl btn-primary rounded-pill my-4">It's free, and open-source</a>
        </div>
      </div>
    </div>
  </section>
  <section class="muse-section">
    <div class="row pt-0 pt-md-5 align-items-center">
      <div class="col-lg-6 pb-5">
        <div class="pr-2 pr-md-5 mr-0 mr-md-5">
          <h6>Own your data</h6>
          <h2 class="h1 mb-3">Built right into your existing app.</h2>
          <p class="lh-lg big">Caffeinate is a Rails Engine. It works with ActionMailer, your favorite background processor like Sidekiq, DelayedJob, or Que, and your existing gems. Hate it? <code>rm -rf app/drippers</code> and you're done. </p>
          <a href="#" class="btn btn-lg btn-link mt-3">Learn More <svg class="ml-1" data-name="icons/tabler/chevron right" xmlns="http://www.w3.org/2000/svg" width="13" height="13" viewBox="0 0 16 16">
            <rect data-name="Icons/Tabler/Chevron Right background" width="16" height="16" fill="none"/>
            <path d="M.26.26A.889.889,0,0,1,1.418.174l.1.086L8.629,7.371a.889.889,0,0,1,.086,1.157l-.086.1L1.517,15.74A.889.889,0,0,1,.174,14.582l.086-.1L6.743,8,.26,1.517A.889.889,0,0,1,.174.36Z" transform="translate(4)" fill="#ffffff"/>
          </svg></a>
        </div>
      </div>
      <div class="col-lg-6 pt-5">
        <%= image_tag "Ruby_On_Rails_Logo.svg" %>
      </div>
    </div>
  </section>

  <hr>

  <!-- Muse Section -->
  <section class="muse-section">
    <h6 class="text-center">Get the party started</h6>
    <h2 class="h1 mb-4 pb-4 text-center">Integrate Caffeinate in 5 easy steps</h2>
    <div class="row my-4 my-lg-5">
      <div class="col-lg-6" data-aos="fade-up" data-aos-delay="100">
        <pre class="language-bash">
          <code>
            $ bundle add caffeinate # or add it manually
            Fetching gem metadata from https://rubygems.org/...........
            Using caffeinate 0.2.1
            Using rails 6.0.3.2
            $ rails g caffeinate:install
            create  config/initializers/caffeinate.rb
            create  app/drippers/application_dripper.rb
            insert  config/routes.rb
            Copied migration 20201205175248_create_caffeinate_campaigns.caffeinate.rb from caffeinate
            Copied migration 20201205175249_create_caffeinate_campaign_subscriptions.caffeinate.rb from caffeinate
            Copied migration 20201205175250_create_caffeinate_mailings.caffeinate.rb from caffeinate
            $ rails db:migrate
            == <%= @now.strftime('%Y%m%d%H%M%S') %> CreateCaffeinateCampaigns: migrating =============================
            ...
            == <%= @now.strftime('%Y%m%d%H%M%S') %> CreateCaffeinateCampaigns: migrated (0.0<%= rand(100...250) %>s) ====================
            == <%= (@now + 1).strftime('%Y%m%d%H%M%S') %> CreateCaffeinateCampaignSubscriptions: migrating =================
            ...
            == <%= (@now + 1).strftime('%Y%m%d%H%M%S') %> CreateCaffeinateCampaignSubscriptions: migrated (0.0<%= rand(100...250) %>s) ========
            == <%= (@now + 2).strftime('%Y%m%d%H%M%S') %> CreateCaffeinateMailings: migrating ==============================
            ...
            == <%= (@now + 2).strftime('%Y%m%d%H%M%S') %> CreateCaffeinateMailings: migrated (0.0<%= rand(100...250) %>s) =====================
            $ rails s
          </code>
        </pre>
      </div>
      <div class="col-lg-6">
        <div class="py-3 py-xl-5 px-lg-5">
          <h2 class="mb-3 mt-3 mt-lg-0">Add the gem</h2>
          <p class="mb-4 lh-lg">You've done this before. Add the `caffeinate` gem to your Gemfile, `bundle`, and then install it. This will copy over some some migrations, an initializer,
            and create a new directory in your `app` folder.
          </p>
        </div>
      </div>
    </div>
    <div class="row py-4 py-lg-5">
      <div class="col-lg-6 order-lg-2" data-aos="fade-up" data-aos-delay="100">
        <pre class="language-bash">
          <code>
            $ rails c
            Running via Spring preloader in process 58358
            Loading development environment (Rails 6.0.3.4)
          </code>
        </pre>
        <pre class="language-ruby">
          <code>
            irb(main):001:0> Caffeinate::Campaign.create(name: "Onboarding Campaign", slug: "onboarding")
            (0.1ms)  begin transaction
            Caffeinate::Campaign Create (0.6ms)  INSERT INTO "caffeinate_campaigns" ("name", "slug", "created_at", "updated_at") VALUES (?, ?, ?, ?)  [["name", "Onboarding Campaign"], ["slug", "onboarding"], ["created_at", "<%= @now.to_formatted_s(:db) %>.<%= rand(1_000_000) %>"], ["updated_at", "<%=@now.to_formatted_s(:db) %>.<%= rand(1_000_000) %>"]]
            (1.0ms)  commit transaction
            => &lt;Caffeinate::Campaign id: 1, name: "Onboarding Campaign", slug: "onboarding", created_at: "<%= @now.to_formatted_s(:db) %>", updated_at: "<%= @now.to_formatted_s(:db) %>">
          </code>
        </pre>
      </div>
      <div class="col-lg-6">
        <div class="py-3 py-xl-5 px-lg-5">
          <h2 class="mb-3 mt-3 mt-lg-0">Create a Campaign</h2>
          <p class="mb-4 lh-lg">Each email sequence or periodical email is related to a Campaign. It's not exposed publicly, but instead to your developers. Keep the `slug` attribute in mind: we'll be referencing this later.</p>
          <a href="#" class="btn btn-link">View project <svg class="ml-1" data-name="icons/tabler/chevron right" xmlns="http://www.w3.org/2000/svg" width="13" height="13" viewBox="0 0 16 16">
            <rect data-name="Icons/Tabler/Chevron Right background" width="16" height="16" fill="none"/>
            <path d="M.26.26A.889.889,0,0,1,1.418.174l.1.086L8.629,7.371a.889.889,0,0,1,.086,1.157l-.086.1L1.517,15.74A.889.889,0,0,1,.174,14.582l.086-.1L6.743,8,.26,1.517A.889.889,0,0,1,.174.36Z" transform="translate(4)" fill="#ffffff"/>
          </svg></a>
        </div>
      </div>
    </div>
    <div class="row py-4 py-lg-5">
      <div class="col-lg-6" data-aos="fade-up" data-aos-delay="100">
        <pre class="language-bash">
          <code>
            vi app/drippers/onboarding_dripper.rb
          </code>
        </pre>
        <pre class="language-ruby">
          <code>
            class OnboardingDripper < ApplicationDripper
              self.campaign = :onboarding
              defaults mailer_class: "OnboardingDripperMailer"

              # If the user completed onboarding, they don't need our help anymore.
              # Save on SES costs for off-sites!
              before_drip do |drip, mailing|
                if mailing.subscription.user.completed_onboarding?
                  mailing.subscription.unsubscribe!
                  return false
                end
              end

              # drip :mailer_action, options = {}
              drip :day_1, delay: 3.hours # OnboardingDripperMailer#day_1
              drip :day_2, delay: 1.day # OnboardingDripperMailer#day_2
              drip :day_3, delay: 3.days # OnboardingDripperMailer#day_3
              drip :final, delay: 5.days # OnboardingDripperMailer#final
            end
          </code>
        </pre>
      </div>
      <div class="col-lg-6">
        <div class="py-3 py-xl-5 px-lg-5">
          <h2 class="mb-3 mt-3 mt-lg-0">Create a Dripper</h2>
          <p class="mb-4 lh-lg">The Dripper handles the logic for your email sequence or periodical. It references the relevant ActionMailer class and actions, and when you want them to be sent. Oh, and because this is Rails, callbacks!</p>
          <p class="mb-4 lh-lg">When you subscribe a user (or anything) to a Campaign, we create <code>Caffeinate::Mailing</code> records for them, which correspond to an <code>ActionMailer</code> action. </p>
            <rect data-name="Icons/Tabler/Chevron Right background" width="16" height="16" fill="none"/>
            <path d="M.26.26A.889.889,0,0,1,1.418.174l.1.086L8.629,7.371a.889.889,0,0,1,.086,1.157l-.086.1L1.517,15.74A.889.889,0,0,1,.174,14.582l.086-.1L6.743,8,.26,1.517A.889.889,0,0,1,.174.36Z" transform="translate(4)" fill="#ffffff"/>
          </svg></a>
        </div>
      </div>
    </div>
    <div class="row py-4 py-lg-5">
      <div class="col-lg-6 order-lg-2" data-aos="fade-up" data-aos-delay="100">
        <pre class="language-ruby">
          <code>
            class User < ApplicationRecord
              after_create_commit do
                campaign = ::Caffeinate::Campaign.find_by(slug: "onboarding")
                campaign.subscribe(self) # &lt;Caffeinate::CampaignSubscription id: 1, subscriber_type: "User", subscriber_id: 1>
              end

              after_update_commit do
                if completed_onboarding? && completed_onboarding_changed?
                  campaign = ::Caffeinate::Campaign.find_by(slug: "onboarding")
                  campaign.subscriptions.find_by(subscriber: self).end!("Completed onboarding")
                end
              end
            end
          </code>
        </pre>
      </div>
      <div class="col-lg-6">
        <div class="py-3 py-lg-5 px-lg-5">
          <h2 class="mb-3 mt-3 mt-lg-0">Subscribe to the Campaign</h2>
          <p class="mb-4 lh-lg">Now that we have our Campaign and a Dripper, we need to subscribe something to the Campaign. A subscriber can be any ActiveRecord object. We'll assume user, though.</p>
          <p class="mb-4 lh-lg">Don't worry, there are more options for more advanced setups.</p>
        </div>
      </div>
    </div>

    <div class="row py-4 py-lg-5">
      <div class="col-lg-6" data-aos="fade-up" data-aos-delay="100">
        <pre class="language-bash">
          <code>
            vi app/workers/onboarding_dripper_worker.rb
          </code>
        </pre>
       <pre class="language-ruby">
          <code>
            class OnboardingDripperWorker
              include Sidekiq::Worker

              def perform
                OnboardingDripper.perform!
              end
            end
          </code>
        </pre>
      </div>
      <div class="col-lg-6">
        <div class="py-3 py-xl-5 px-lg-5">
          <h2 class="mb-3 mt-3 mt-lg-0">Deliver the messages</h2>
          <p class="mb-4 lh-lg">Last but not least, we need to have the messages delivered. Running the `#perform!` method on the Dripper class will check for any emails that need to be sent according to the times we gave them and send them if it's time. </p>
          <p class="mb-4 lh-lg">Caffeinate is background-processor-agnostic. All you need to do is make sure you run <code>#perform!</code> on the Dripper class at a given interval and Caffeinate will take care of the rest.</p>
          <a href="#" class="btn btn-link">View project <svg class="ml-1" data-name="icons/tabler/chevron right" xmlns="http://www.w3.org/2000/svg" width="13" height="13" viewBox="0 0 16 16">
            <rect data-name="Icons/Tabler/Chevron Right background" width="16" height="16" fill="none"/>
            <path d="M.26.26A.889.889,0,0,1,1.418.174l.1.086L8.629,7.371a.889.889,0,0,1,.086,1.157l-.086.1L1.517,15.74A.889.889,0,0,1,.174,14.582l.086-.1L6.743,8,.26,1.517A.889.889,0,0,1,.174.36Z" transform="translate(4)" fill="#ffffff"/>
          </svg></a>
        </div>
      </div>
    </div>

  </section>

  <hr>

  <!-- Muse Section -->
  <section class="muse-section px-3 px-md-0 py-md-5  rounded-12 " data-aos="fade-up" data-aos-delay="100">
    <div class="col-12 col-md-9 col-xl-8 m-auto text-center py-md-4">
      <h2 class="h1 mb-0">Give it a try</h2>
      <p class="big text-white-600">This marketing site runs Caffeinate under the hood. Sign up, sign in, and see a demo app in action. Unsubscribe any time, and even delete your account!</p>
      <form class="mt-4 mx-lg-4 px-md-2 pt-2" action="/users/sign_in" method="get">
        <div class="input-group input-group-xl">
          <input type="text" class="form-control" placeholder="Email" aria-label="Email" name="user[email]" aria-describedby="button-addon2">
          <button class="btn btn-xl btn-warning text-uppercase caption px-3" type="button" id="button-addon2">Sign up</button>
        </div>
      </form>
      <p class="small text-gray-600 mt-2 pt-1 lh-sm">Questions? Comments? I'm <a href="https://twitter.com/joshmn">@joshmn</a> on Twitter (and all over the internet except Instagram.) </p>
    </div>
  </section>
</div>
